

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.event.ActionEvent;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import practica1hja.modelo.Card;
import practica1hja.modelo.Deck;
import practica1hja.modelo.Hand;
import practica1hja.modelo.HandEvaluator;
import practica1hja.modelo.Statistics;

/**
 *
 * @author jcarlos
 */
public class PokerStove extends javax.swing.JFrame {
    
    public static int N_MANOS = 100000;
    

    /**
     * Creates new form PokerStove
     */
    public PokerStove() {
        initComponents();
        PokerStove.sTodos = new String[10];
        for(int i = 0; i < 10; i++){
            PokerStove.sTodos[i] = "";
        }
        this.tfTodos = new ArrayList<>();
        this.tfTodos.add(tf1);
        this.tfTodos.add(tf2);
        this.tfTodos.add(tf3);
        this.tfTodos.add(tf4);
        this.tfTodos.add(tf5);
        this.tfTodos.add(tf6);
        this.tfTodos.add(tf7);
        this.tfTodos.add(tf8);
        this.tfTodos.add(tf9);
        this.tfTodos.add(tf10);
        for(JTextField jf : this.tfTodos)
            jf.setEditable(false);
        this.leTodos = new ArrayList<>(10);
        this.leTodos.add(le1);
        this.leTodos.add(le2);
        this.leTodos.add(le3);
        this.leTodos.add(le4);
        this.leTodos.add(le5);
        this.leTodos.add(le6);
        this.leTodos.add(le7);
        this.leTodos.add(le8);
        this.leTodos.add(le9);
        this.leTodos.add(le10);
        this.bpTodos = new ArrayList<>();
        this.bpTodos.add(bp1);
        this.bpTodos.add(bp2);
        this.bpTodos.add(bp3);
        this.bpTodos.add(bp4);
        this.bpTodos.add(bp5);
        this.bpTodos.add(bp6);
        this.bpTodos.add(bp7);
        this.bpTodos.add(bp8);
        this.bpTodos.add(bp9);
        this.bpTodos.add(bp10);
        int i = 0;
        for (JButton b : this.bpTodos) {

            b.setName(Integer.toString(i));
            b.addActionListener(new java.awt.event.ActionListener() {
                @Override
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    try {
                        bpPressed(evt);
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(PokerStove.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
            i++;
        }
        this.randomTodos = new ArrayList<>();
        this.randomTodos.add(this.br1);
        this.randomTodos.add(this.br2);
        this.randomTodos.add(this.br3);
        this.randomTodos.add(this.br4);
        this.randomTodos.add(this.br5);
        this.randomTodos.add(this.br6);
        this.randomTodos.add(this.br7);
        this.randomTodos.add(this.br8);
        this.randomTodos.add(this.br9);
        this.randomTodos.add(this.br10);
        i = 0;
        this.textOutput.setEditable(false);
        for (JButton b : this.randomTodos) {

            b.setName(Integer.toString(i));
            b.addActionListener(new java.awt.event.ActionListener() {
                @Override
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    randomPressed(evt);
                }

                
            });
            i++;
        }
    }
    
    private void bpPressed(ActionEvent evt) throws FileNotFoundException {
        JButton jb = (JButton) evt.getSource();
        int i = Integer.parseInt(jb.getName());

        new Vista1(this.tfTodos.get(i), sTodos[i], i).setVisible(true);
    }
    
    
    private void randomPressed(ActionEvent evt) {
        JButton jb = (JButton) evt.getSource();
        int i = Integer.parseInt(jb.getName());

        JTextField t = this.tfTodos.get(i);
        t.setText("random");
        PokerStove.sTodos[i] = this.RANDOM;
    }

    public void clean(){
        for(String s : PokerStove.sTodos)
            s = "";
        
        for(JTextField j : this.tfTodos)
            j.setText("");
        
        
       
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bp1 = new javax.swing.JButton();
        br1 = new javax.swing.JButton();
        tf1 = new javax.swing.JTextField();
        bp2 = new javax.swing.JButton();
        br2 = new javax.swing.JButton();
        tf2 = new javax.swing.JTextField();
        bp3 = new javax.swing.JButton();
        br3 = new javax.swing.JButton();
        tf3 = new javax.swing.JTextField();
        bp4 = new javax.swing.JButton();
        bp5 = new javax.swing.JButton();
        bp6 = new javax.swing.JButton();
        br6 = new javax.swing.JButton();
        br5 = new javax.swing.JButton();
        br4 = new javax.swing.JButton();
        tf4 = new javax.swing.JTextField();
        tf5 = new javax.swing.JTextField();
        tf6 = new javax.swing.JTextField();
        bp7 = new javax.swing.JButton();
        bp8 = new javax.swing.JButton();
        bp9 = new javax.swing.JButton();
        br9 = new javax.swing.JButton();
        br8 = new javax.swing.JButton();
        br7 = new javax.swing.JButton();
        tf7 = new javax.swing.JTextField();
        tf8 = new javax.swing.JTextField();
        tf9 = new javax.swing.JTextField();
        bp10 = new javax.swing.JButton();
        br10 = new javax.swing.JButton();
        tf10 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textOutput = new javax.swing.JTextArea();
        le1 = new javax.swing.JLabel();
        le2 = new javax.swing.JLabel();
        le3 = new javax.swing.JLabel();
        le6 = new javax.swing.JLabel();
        le5 = new javax.swing.JLabel();
        le4 = new javax.swing.JLabel();
        le10 = new javax.swing.JLabel();
        le9 = new javax.swing.JLabel();
        le8 = new javax.swing.JLabel();
        le7 = new javax.swing.JLabel();
        bStop = new javax.swing.JButton();
        bEvaluate = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        bStop1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfBoard = new javax.swing.JTextField();
        tfDead = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bp1.setText("Player1");

        br1.setText("rd");

        bp2.setText("Player2");

        br2.setText("rd");

        bp3.setText("Player3");

        br3.setText("rd");

        bp4.setText("Player4");

        bp5.setText("Player5");

        bp6.setText("Player6");

        br6.setText("rd");

        br5.setText("rd");

        br4.setText("rd");

        bp7.setText("Player7");

        bp8.setText("Player8");

        bp9.setText("Player9");

        br9.setText("rd");

        br8.setText("rd");

        br7.setText("rd");

        bp10.setText("Player10");

        br10.setText("rd");

        textOutput.setColumns(20);
        textOutput.setRows(5);
        jScrollPane1.setViewportView(textOutput);

        le1.setText("0.0%");

        le2.setText("0.0%");

        le3.setText("0.0%");

        le6.setText("0.0%");

        le5.setText("0.0%");

        le4.setText("0.0%");

        le10.setText("0.0%");

        le9.setText("0.0%");

        le8.setText("0.0%");

        le7.setText("0.0%");

        bStop.setBackground(new java.awt.Color(253, 41, 58));
        bStop.setText("Stop");

        bEvaluate.setBackground(new java.awt.Color(106, 210, 113));
        bEvaluate.setText("Evaluate");
        bEvaluate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEvaluateActionPerformed(evt);
            }
        });

        jLabel11.setText(" Equity:");

        bStop1.setBackground(new java.awt.Color(71, 144, 253));
        bStop1.setText("Clean");
        bStop1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bStop1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Board:");

        jLabel2.setText("Dead Cards:");

        jMenu1.setText("File");

        jMenuItem1.setText("Manos simuladas");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bp1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(br1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bp2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(br2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bp3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(br3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bp5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(br5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf5, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bp6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(br6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf6, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bp4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(br4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf4, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bp7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(br7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf7, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bp8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(br8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf8, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bp9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(br9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf9, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bp10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(br10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tf10, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bEvaluate)
                        .addGap(18, 18, 18)
                        .addComponent(bStop, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bStop1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel11)
                    .addComponent(le1)
                    .addComponent(le2)
                    .addComponent(le3)
                    .addComponent(le4)
                    .addComponent(le5)
                    .addComponent(le6)
                    .addComponent(le7)
                    .addComponent(le8)
                    .addComponent(le9)
                    .addComponent(le10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfDead, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bp1, bp10, bp2, bp3, bp4, bp5, bp6, bp7, bp8, bp9});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {bEvaluate, bStop, bStop1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bp1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(br1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(le1)
                    .addComponent(jLabel1)
                    .addComponent(tfBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(tfDead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bp2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(br2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(le2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bp3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(br3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(le3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bp4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(br4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(le4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bp5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(br5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf5, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(le5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bp6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(br6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf6, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(le6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bp7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(br7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf7, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(le7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bp8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(br8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf8, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(le8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bp9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(br9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(le9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bp10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(br10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(le10)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bStop, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bEvaluate, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bStop1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bStop1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bStop1ActionPerformed
        clean();
    }//GEN-LAST:event_bStop1ActionPerformed

    private String serializeRanges(String str, int position){
        String salida = "";
        StringTokenizer token = new StringTokenizer(str, ",");
        while(token.hasMoreElements()){
            String rango = token.nextToken();
            if(rango.length() == 2){
                String value = rango.substring(0, 1);
                if(!salida.equals(""))
                    salida += ",";

                salida += value + "s" + value + "h," + value + "s" + value + "d,"
                        + value + "s" + value + "c,"
                        + value + "h" + value + "d," + value + "h" + value + "c,"
                        + value + "d" + value + "c";
            } else if(rango.length() == 3 && rango.substring(2, 3).equals("s")){
                String value1 = rango.substring(0, 1);
                String value2 = rango.substring(1, 2);
                if(!salida.equals(""))
                    salida += ",";
              
                salida += value1 + "s" + value2 + "s," + value1 + "h" + value2 + "h,"
                        + value1 + "c" + value2 + "c,"
                        + value1 + "d" + value2 + "d";
            } else if(rango.length() == 3 && rango.substring(2, 3).equals("o")){
                String value1 = rango.substring(0, 1);
                String value2 = rango.substring(1, 2);
                if(!salida.equals(""))
                    salida += ",";
 
                salida += value1 + "s" + value2 + "h," 
                        + value1 + "s" + value2 + "c,"
                        + value1 + "s" + value2 + "d,"
                        + value1 + "h" + value2 + "s,"
                        + value1 + "h" + value2 + "c," 
                        + value1 + "h" + value2 + "d,"
                        + value1 + "c" + value2 + "s,"
                        + value1 + "c" + value2 + "h,"
                        + value1 + "c" + value2 + "d," 
                        + value1 + "d" + value2 + "s,"
                        + value1 + "d" + value2 + "h,"
                        + value1 + "d" + value2 + "c";
            }
        }
        return salida;
    }
    
    private void bEvaluateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEvaluateActionPerformed
        
        ArrayList<ArrayList<ArrayList<Card>>> selected;//HACERLO INMUTABLE
        selected = new ArrayList<>();
        for(int i = 0; i < 10; i++){
            this.leTodos.get(i).setText("0,0%");
        }
      
        long a = System.currentTimeMillis();
        for(int i = 0; i < 10; i++){
            if(!this.tfTodos.get(i).getText().equals("")){
                String[] separados;
                separados = sTodos[i].split(",");
                int x = 0;
                selected.add(new ArrayList<ArrayList<Card>>());
                for(String s : separados){
                    selected.get(i).add(new ArrayList<Card>());
                    selected.get(i).get(x).add(new Card(s.substring(0,1), s.substring(1,2)));
                    selected.get(i).get(x).add(new Card(s.substring(2,3), s.substring(3,4)));
                    x++;
                }
            }
        }

        Deck deck = new Deck();

        ArrayList<Statistics> st;
        st = new ArrayList<>();
        for (int players = 1; players <= selected.size(); players++) {
            st.add(new Statistics(players));
        }
        ArrayList<Card> boardConstante = new ArrayList<>();
        if (!this.tfBoard.getText().equals("")) {
            String s = this.tfBoard.getText();
            StringTokenizer token = new StringTokenizer(s, ",");
            while(token.hasMoreElements()){
                String c = token.nextToken();
                Card carta1 = new Card(c.substring(0,1), c.substring(1,2));
                Deck.disponible.put(carta1.getNum52(), false);
                boardConstante.add(carta1);
            }
        }
        
        if (!this.tfDead.getText().equals("")) {
            String s = this.tfDead.getText();
            StringTokenizer token = new StringTokenizer(s, ",");
            while(token.hasMoreElements()){
                String c = token.nextToken();
                Card carta1 = new Card(c.substring(0,1), c.substring(1,2));
                Deck.disponible.put(carta1.getNum52(), false);
            }
        }

        for(int i = 0; i < N_MANOS; i++){
            Statistics.total++;
            ArrayList<Integer> cartasPlayers = new ArrayList<>();
            ArrayList<HandEvaluator> he = new ArrayList<>();
            Random rnd = new Random(System.nanoTime());
            ArrayList<Hand> hs = new ArrayList<>();

            for (ArrayList<ArrayList<Card>> selected1 : selected) {
                Hand h = null;
                do {
                    int mano = rnd.nextInt(selected1.size());
                    ArrayList<Card> al = new ArrayList<>(selected1.get(mano));
                    h = new Hand(al);
                } while (!h.disponible());
                for(Card c : h.getHand()){
                    Deck.disponible.put(c.getNum52(), false);
                    cartasPlayers.add(c.getNum52());
                }
                hs.add(h);
            }
            ArrayList<Card> board;
            board = new ArrayList<>(boardConstante);
            int numBoard = boardConstante.size();
            for (int ii = 0; ii < 5-numBoard; ii++) {
                Card c = null;
                do{
                c = deck.deal();
                }while(!Deck.disponible.get(c.getNum52()));
                board.add(c);
            }
            
            for(Hand h : hs){
                h.getHand().addAll(board);
            }
            
            int pl = 0;
            for(Hand h : hs){
                
                h.sort();
                he.add(new HandEvaluator(h.getHand(), Integer.toString(pl)));
                pl++;
            }
            
            Collections.sort(he);
            
            if(he.get(0).compareTo(he.get(1))==0){
                int fin = he.size() - 2;
                int ini = 1;
                boolean iguales = true;
                while(ini <= fin && iguales){
                    if(he.get(ini).compareTo(he.get(ini+1))==0){
                        ini++;
                    }
                    else{
                        iguales = false;
                    }
                }
                double tie = (double)1/((double)ini+(double)1);
                for(int eq = 0; eq <= ini; eq++){
                    st.get(Integer.parseInt(he.get(eq).getId())).ties(tie);
                }
            }else
                st.get(Integer.parseInt(he.get(0).getId())).wins();
               
            
            deck.reset();
            for(Integer c : cartasPlayers){
                Deck.disponible.put(c, true);
            }
            
                
        }
        long b = System.currentTimeMillis();
        
        System.out.println(b-a);
        for(int i = 0; i < st.size(); i++){
           // System.out.printf("Wins: %.2f\n", st.get(i).getWins() + st.get(i).getTies());
            this.leTodos.get(i).setText(String.format("%.2f", st.get(i).getWins() + st.get(i).getTies())+"%");
            //System.out.printf("Ties: %.2f\n", st.get(i).getTies());
            //System.out.println();
            
            //System.out.println(st.get(i).getWin() + st.get(i).getTie());
        }
        
        String output = "  Número de manos simuladas en total: " + PokerStove.N_MANOS + ".\n"
                + "  Número de jugadores: " + st.size() + ".\n\n" +
                " Resultados:\t WINS \t TIE \t EQUITY\n";
        
        for(Statistics s : st){
            output += "-Player " + s.getPlayer() + ":"
                    + "\t" + s.getWin() + ""
                    + "\t" + s.getTie() + ""
                    + "\t" + String.format("%.2f", s.getWins() + s.getTies())+"%" + ""
                    + "\n";
        }
        
        for(Statistics s : st)
            s.clear();
        
        this.textOutput.setText(output);
        
    }//GEN-LAST:event_bEvaluateActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        try{
            int ans = Integer.parseInt(JOptionPane.showInputDialog(
                "\nNumero de manos: " + N_MANOS + "\n\nIntroduzca el nuevo número de manos a simular\n\n",
                JOptionPane.QUESTION_MESSAGE));  // el icono sera un iterrogante
            
            PokerStove.N_MANOS = ans;
        }catch(NumberFormatException e){
        
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new PokerStove().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bEvaluate;
    private javax.swing.JButton bStop;
    private javax.swing.JButton bStop1;
    private javax.swing.JButton bp1;
    private javax.swing.JButton bp10;
    private javax.swing.JButton bp2;
    private javax.swing.JButton bp3;
    private javax.swing.JButton bp4;
    private javax.swing.JButton bp5;
    private javax.swing.JButton bp6;
    private javax.swing.JButton bp7;
    private javax.swing.JButton bp8;
    private javax.swing.JButton bp9;
    private javax.swing.JButton br1;
    private javax.swing.JButton br10;
    private javax.swing.JButton br2;
    private javax.swing.JButton br3;
    private javax.swing.JButton br4;
    private javax.swing.JButton br5;
    private javax.swing.JButton br6;
    private javax.swing.JButton br7;
    private javax.swing.JButton br8;
    private javax.swing.JButton br9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel le1;
    private javax.swing.JLabel le10;
    private javax.swing.JLabel le2;
    private javax.swing.JLabel le3;
    private javax.swing.JLabel le4;
    private javax.swing.JLabel le5;
    private javax.swing.JLabel le6;
    private javax.swing.JLabel le7;
    private javax.swing.JLabel le8;
    private javax.swing.JLabel le9;
    private javax.swing.JTextArea textOutput;
    private javax.swing.JTextField tf1;
    private javax.swing.JTextField tf10;
    private javax.swing.JTextField tf2;
    private javax.swing.JTextField tf3;
    private javax.swing.JTextField tf4;
    private javax.swing.JTextField tf5;
    private javax.swing.JTextField tf6;
    private javax.swing.JTextField tf7;
    private javax.swing.JTextField tf8;
    private javax.swing.JTextField tf9;
    private javax.swing.JTextField tfBoard;
    private javax.swing.JTextField tfDead;
    // End of variables declaration//GEN-END:variables
    public static String[] sTodos;
    private final ArrayList<JTextField> tfTodos;
    private final ArrayList<JButton> bpTodos;
    private final ArrayList<JButton> randomTodos;
    private final ArrayList<JLabel> leTodos;
    private final String RANDOM = "AsAh,AsAd,AsAc,AhAd,AhAc,AdAc,AsKs,AhKh,AcKc,"
            + "AdKd,AsQs,AhQh,AcQc,AdQd,AsJs,AhJh,AcJc,AdJd,AsTs,AhTh,AcTc,AdTd,"
            + "As9s,Ah9h,Ac9c,Ad9d,As8s,Ah8h,Ac8c,Ad8d,As7s,Ah7h,Ac7c,Ad7d,As6s,"
            + "Ah6h,Ac6c,Ad6d,As5s,Ah5h,Ac5c,Ad5d,As4s,Ah4h,Ac4c,Ad4d,As3s,Ah3h,"
            + "Ac3c,Ad3d,As2s,Ah2h,Ac2c,Ad2d,AsKh,AsKc,AsKd,AhKs,AhKc,AhKd,AcKs,"
            + "AcKh,AcKd,AdKs,AdKh,AdKc,KsKh,KsKd,KsKc,KhKd,KhKc,KdKc,KsQs,KhQh,"
            + "KcQc,KdQd,KsJs,KhJh,KcJc,KdJd,KsTs,KhTh,KcTc,KdTd,Ks9s,Kh9h,Kc9c,"
            + "Kd9d,Ks8s,Kh8h,Kc8c,Kd8d,Ks7s,Kh7h,Kc7c,Kd7d,Ks6s,Kh6h,Kc6c,Kd6d,"
            + "Ks5s,Kh5h,Kc5c,Kd5d,Ks4s,Kh4h,Kc4c,Kd4d,Ks3s,Kh3h,Kc3c,Kd3d,Ks2s,"
            + "Kh2h,Kc2c,Kd2d,AsQh,AsQc,AsQd,AhQs,AhQc,AhQd,AcQs,AcQh,AcQd,AdQs,"
            + "AdQh,AdQc,KsQh,KsQc,KsQd,KhQs,KhQc,KhQd,KcQs,KcQh,KcQd,KdQs,KdQh,"
            + "KdQc,QsQh,QsQd,QsQc,QhQd,QhQc,QdQc,QsJs,QhJh,QcJc,QdJd,QsTs,QhTh,"
            + "QcTc,QdTd,Qs9s,Qh9h,Qc9c,Qd9d,Qs8s,Qh8h,Qc8c,Qd8d,Qs7s,Qh7h,Qc7c,"
            + "Qd7d,Qs6s,Qh6h,Qc6c,Qd6d,Qs5s,Qh5h,Qc5c,Qd5d,Qs4s,Qh4h,Qc4c,Qd4d,"
            + "Qs3s,Qh3h,Qc3c,Qd3d,Qs2s,Qh2h,Qc2c,Qd2d,AsJh,AsJc,AsJd,AhJs,AhJc,"
            + "AhJd,AcJs,AcJh,AcJd,AdJs,AdJh,AdJc,KsJh,KsJc,KsJd,KhJs,KhJc,KhJd,"
            + "KcJs,KcJh,KcJd,KdJs,KdJh,KdJc,QsJh,QsJc,QsJd,QhJs,QhJc,QhJd,QcJs,"
            + "QcJh,QcJd,QdJs,QdJh,QdJc,JsJh,JsJd,JsJc,JhJd,JhJc,JdJc,JsTs,JhTh,"
            + "JcTc,JdTd,Js9s,Jh9h,Jc9c,Jd9d,Js8s,Jh8h,Jc8c,Jd8d,Js7s,Jh7h,Jc7c,"
            + "Jd7d,Js6s,Jh6h,Jc6c,Jd6d,Js5s,Jh5h,Jc5c,Jd5d,Js4s,Jh4h,Jc4c,Jd4d,"
            + "Js3s,Jh3h,Jc3c,Jd3d,Js2s,Jh2h,Jc2c,Jd2d,AsTh,AsTc,AsTd,AhTs,AhTc,"
            + "AhTd,AcTs,AcTh,AcTd,AdTs,AdTh,AdTc,KsTh,KsTc,KsTd,KhTs,KhTc,KhTd,"
            + "KcTs,KcTh,KcTd,KdTs,KdTh,KdTc,QsTh,QsTc,QsTd,QhTs,QhTc,QhTd,QcTs,"
            + "QcTh,QcTd,QdTs,QdTh,QdTc,JsTh,JsTc,JsTd,JhTs,JhTc,JhTd,JcTs,JcTh,"
            + "JcTd,JdTs,JdTh,JdTc,TsTh,TsTd,TsTc,ThTd,ThTc,TdTc,Ts9s,Th9h,Tc9c,"
            + "Td9d,Ts8s,Th8h,Tc8c,Td8d,Ts7s,Th7h,Tc7c,Td7d,Ts6s,Th6h,Tc6c,Td6d,"
            + "Ts5s,Th5h,Tc5c,Td5d,Ts4s,Th4h,Tc4c,Td4d,Ts3s,Th3h,Tc3c,Td3d,Ts2s,"
            + "Th2h,Tc2c,Td2d,As9h,As9c,As9d,Ah9s,Ah9c,Ah9d,Ac9s,Ac9h,Ac9d,Ad9s,"
            + "Ad9h,Ad9c,Ks9h,Ks9c,Ks9d,Kh9s,Kh9c,Kh9d,Kc9s,Kc9h,Kc9d,Kd9s,Kd9h,"
            + "Kd9c,Qs9h,Qs9c,Qs9d,Qh9s,Qh9c,Qh9d,Qc9s,Qc9h,Qc9d,Qd9s,Qd9h,Qd9c,"
            + "Js9h,Js9c,Js9d,Jh9s,Jh9c,Jh9d,Jc9s,Jc9h,Jc9d,Jd9s,Jd9h,Jd9c,Ts9h,"
            + "Ts9c,Ts9d,Th9s,Th9c,Th9d,Tc9s,Tc9h,Tc9d,Td9s,Td9h,Td9c,9s9h,9s9d,"
            + "9s9c,9h9d,9h9c,9d9c,9s8s,9h8h,9c8c,9d8d,9s7s,9h7h,9c7c,9d7d,9s6s,"
            + "9h6h,9c6c,9d6d,9s5s,9h5h,9c5c,9d5d,9s4s,9h4h,9c4c,9d4d,9s3s,9h3h,"
            + "9c3c,9d3d,9s2s,9h2h,9c2c,9d2d,As8h,As8c,As8d,Ah8s,Ah8c,Ah8d,Ac8s,"
            + "Ac8h,Ac8d,Ad8s,Ad8h,Ad8c,Ks8h,Ks8c,Ks8d,Kh8s,Kh8c,Kh8d,Kc8s,Kc8h,"
            + "Kc8d,Kd8s,Kd8h,Kd8c,Qs8h,Qs8c,Qs8d,Qh8s,Qh8c,Qh8d,Qc8s,Qc8h,Qc8d,"
            + "Qd8s,Qd8h,Qd8c,Js8h,Js8c,Js8d,Jh8s,Jh8c,Jh8d,Jc8s,Jc8h,Jc8d,Jd8s,"
            + "Jd8h,Jd8c,Ts8h,Ts8c,Ts8d,Th8s,Th8c,Th8d,Tc8s,Tc8h,Tc8d,Td8s,Td8h,"
            + "Td8c,9s8h,9s8c,9s8d,9h8s,9h8c,9h8d,9c8s,9c8h,9c8d,9d8s,9d8h,9d8c,"
            + "8s8h,8s8d,8s8c,8h8d,8h8c,8d8c,8s7s,8h7h,8c7c,8d7d,8s6s,8h6h,8c6c,"
            + "8d6d,8s5s,8h5h,8c5c,8d5d,8s4s,8h4h,8c4c,8d4d,8s3s,8h3h,8c3c,8d3d,"
            + "8s2s,8h2h,8c2c,8d2d,As7h,As7c,As7d,Ah7s,Ah7c,Ah7d,Ac7s,Ac7h,Ac7d,"
            + "Ad7s,Ad7h,Ad7c,Ks7h,Ks7c,Ks7d,Kh7s,Kh7c,Kh7d,Kc7s,Kc7h,Kc7d,Kd7s,"
            + "Kd7h,Kd7c,Qs7h,Qs7c,Qs7d,Qh7s,Qh7c,Qh7d,Qc7s,Qc7h,Qc7d,Qd7s,Qd7h,"
            + "Qd7c,Js7h,Js7c,Js7d,Jh7s,Jh7c,Jh7d,Jc7s,Jc7h,Jc7d,Jd7s,Jd7h,Jd7c,"
            + "Ts7h,Ts7c,Ts7d,Th7s,Th7c,Th7d,Tc7s,Tc7h,Tc7d,Td7s,Td7h,Td7c,9s7h,"
            + "9s7c,9s7d,9h7s,9h7c,9h7d,9c7s,9c7h,9c7d,9d7s,9d7h,9d7c,8s7h,8s7c,"
            + "8s7d,8h7s,8h7c,8h7d,8c7s,8c7h,8c7d,8d7s,8d7h,8d7c,7s7h,7s7d,7s7c,"
            + "7h7d,7h7c,7d7c,7s6s,7h6h,7c6c,7d6d,7s5s,7h5h,7c5c,7d5d,7s4s,7h4h,"
            + "7c4c,7d4d,7s3s,7h3h,7c3c,7d3d,7s2s,7h2h,7c2c,7d2d,As6h,As6c,As6d,"
            + "Ah6s,Ah6c,Ah6d,Ac6s,Ac6h,Ac6d,Ad6s,Ad6h,Ad6c,Ks6h,Ks6c,Ks6d,Kh6s,"
            + "Kh6c,Kh6d,Kc6s,Kc6h,Kc6d,Kd6s,Kd6h,Kd6c,Qs6h,Qs6c,Qs6d,Qh6s,Qh6c,"
            + "Qh6d,Qc6s,Qc6h,Qc6d,Qd6s,Qd6h,Qd6c,Js6h,Js6c,Js6d,Jh6s,Jh6c,Jh6d,"
            + "Jc6s,Jc6h,Jc6d,Jd6s,Jd6h,Jd6c,Ts6h,Ts6c,Ts6d,Th6s,Th6c,Th6d,Tc6s,"
            + "Tc6h,Tc6d,Td6s,Td6h,Td6c,9s6h,9s6c,9s6d,9h6s,9h6c,9h6d,9c6s,9c6h,"
            + "9c6d,9d6s,9d6h,9d6c,8s6h,8s6c,8s6d,8h6s,8h6c,8h6d,8c6s,8c6h,8c6d,"
            + "8d6s,8d6h,8d6c,7s6h,7s6c,7s6d,7h6s,7h6c,7h6d,7c6s,7c6h,7c6d,7d6s,"
            + "7d6h,7d6c,6s6h,6s6d,6s6c,6h6d,6h6c,6d6c,6s5s,6h5h,6c5c,6d5d,6s4s,"
            + "6h4h,6c4c,6d4d,6s3s,6h3h,6c3c,6d3d,6s2s,6h2h,6c2c,6d2d,As5h,As5c,"
            + "As5d,Ah5s,Ah5c,Ah5d,Ac5s,Ac5h,Ac5d,Ad5s,Ad5h,Ad5c,Ks5h,Ks5c,Ks5d,"
            + "Kh5s,Kh5c,Kh5d,Kc5s,Kc5h,Kc5d,Kd5s,Kd5h,Kd5c,Qs5h,Qs5c,Qs5d,Qh5s,"
            + "Qh5c,Qh5d,Qc5s,Qc5h,Qc5d,Qd5s,Qd5h,Qd5c,Js5h,Js5c,Js5d,Jh5s,Jh5c,"
            + "Jh5d,Jc5s,Jc5h,Jc5d,Jd5s,Jd5h,Jd5c,Ts5h,Ts5c,Ts5d,Th5s,Th5c,Th5d,"
            + "Tc5s,Tc5h,Tc5d,Td5s,Td5h,Td5c,9s5h,9s5c,9s5d,9h5s,9h5c,9h5d,9c5s,"
            + "9c5h,9c5d,9d5s,9d5h,9d5c,8s5h,8s5c,8s5d,8h5s,8h5c,8h5d,8c5s,8c5h,"
            + "8c5d,8d5s,8d5h,8d5c,7s5h,7s5c,7s5d,7h5s,7h5c,7h5d,7c5s,7c5h,7c5d,"
            + "7d5s,7d5h,7d5c,6s5h,6s5c,6s5d,6h5s,6h5c,6h5d,6c5s,6c5h,6c5d,6d5s,"
            + "6d5h,6d5c,5s5h,5s5d,5s5c,5h5d,5h5c,5d5c,5s4s,5h4h,5c4c,5d4d,5s3s,"
            + "5h3h,5c3c,5d3d,5s2s,5h2h,5c2c,5d2d,As4h,As4c,As4d,Ah4s,Ah4c,Ah4d,"
            + "Ac4s,Ac4h,Ac4d,Ad4s,Ad4h,Ad4c,Ks4h,Ks4c,Ks4d,Kh4s,Kh4c,Kh4d,Kc4s,"
            + "Kc4h,Kc4d,Kd4s,Kd4h,Kd4c,Qs4h,Qs4c,Qs4d,Qh4s,Qh4c,Qh4d,Qc4s,Qc4h,"
            + "Qc4d,Qd4s,Qd4h,Qd4c,Js4h,Js4c,Js4d,Jh4s,Jh4c,Jh4d,Jc4s,Jc4h,Jc4d,"
            + "Jd4s,Jd4h,Jd4c,Ts4h,Ts4c,Ts4d,Th4s,Th4c,Th4d,Tc4s,Tc4h,Tc4d,Td4s,"
            + "Td4h,Td4c,9s4h,9s4c,9s4d,9h4s,9h4c,9h4d,9c4s,9c4h,9c4d,9d4s,9d4h,"
            + "9d4c,8s4h,8s4c,8s4d,8h4s,8h4c,8h4d,8c4s,8c4h,8c4d,8d4s,8d4h,8d4c,"
            + "7s4h,7s4c,7s4d,7h4s,7h4c,7h4d,7c4s,7c4h,7c4d,7d4s,7d4h,7d4c,6s4h,"
            + "6s4c,6s4d,6h4s,6h4c,6h4d,6c4s,6c4h,6c4d,6d4s,6d4h,6d4c,5s4h,5s4c,"
            + "5s4d,5h4s,5h4c,5h4d,5c4s,5c4h,5c4d,5d4s,5d4h,5d4c,4s4h,4s4d,4s4c,"
            + "4h4d,4h4c,4d4c,4s3s,4h3h,4c3c,4d3d,4s2s,4h2h,4c2c,4d2d,As3h,As3c,"
            + "As3d,Ah3s,Ah3c,Ah3d,Ac3s,Ac3h,Ac3d,Ad3s,Ad3h,Ad3c,Ks3h,Ks3c,Ks3d,"
            + "Kh3s,Kh3c,Kh3d,Kc3s,Kc3h,Kc3d,Kd3s,Kd3h,Kd3c,Qs3h,Qs3c,Qs3d,Qh3s,"
            + "Qh3c,Qh3d,Qc3s,Qc3h,Qc3d,Qd3s,Qd3h,Qd3c,Js3h,Js3c,Js3d,Jh3s,Jh3c,"
            + "Jh3d,Jc3s,Jc3h,Jc3d,Jd3s,Jd3h,Jd3c,Ts3h,Ts3c,Ts3d,Th3s,Th3c,Th3d,"
            + "Tc3s,Tc3h,Tc3d,Td3s,Td3h,Td3c,9s3h,9s3c,9s3d,9h3s,9h3c,9h3d,9c3s,"
            + "9c3h,9c3d,9d3s,9d3h,9d3c,8s3h,8s3c,8s3d,8h3s,8h3c,8h3d,8c3s,8c3h,"
            + "8c3d,8d3s,8d3h,8d3c,7s3h,7s3c,7s3d,7h3s,7h3c,7h3d,7c3s,7c3h,7c3d,"
            + "7d3s,7d3h,7d3c,6s3h,6s3c,6s3d,6h3s,6h3c,6h3d,6c3s,6c3h,6c3d,6d3s,"
            + "6d3h,6d3c,5s3h,5s3c,5s3d,5h3s,5h3c,5h3d,5c3s,5c3h,5c3d,5d3s,5d3h,"
            + "5d3c,4s3h,4s3c,4s3d,4h3s,4h3c,4h3d,4c3s,4c3h,4c3d,4d3s,4d3h,4d3c,"
            + "3s3h,3s3d,3s3c,3h3d,3h3c,3d3c,3s2s,3h2h,3c2c,3d2d,As2h,As2c,As2d,"
            + "Ah2s,Ah2c,Ah2d,Ac2s,Ac2h,Ac2d,Ad2s,Ad2h,Ad2c,Ks2h,Ks2c,Ks2d,Kh2s,"
            + "Kh2c,Kh2d,Kc2s,Kc2h,Kc2d,Kd2s,Kd2h,Kd2c,Qs2h,Qs2c,Qs2d,Qh2s,Qh2c,"
            + "Qh2d,Qc2s,Qc2h,Qc2d,Qd2s,Qd2h,Qd2c,Js2h,Js2c,Js2d,Jh2s,Jh2c,Jh2d,"
            + "Jc2s,Jc2h,Jc2d,Jd2s,Jd2h,Jd2c,Ts2h,Ts2c,Ts2d,Th2s,Th2c,Th2d,Tc2s,"
            + "Tc2h,Tc2d,Td2s,Td2h,Td2c,9s2h,9s2c,9s2d,9h2s,9h2c,9h2d,9c2s,9c2h,"
            + "9c2d,9d2s,9d2h,9d2c,8s2h,8s2c,8s2d,8h2s,8h2c,8h2d,8c2s,8c2h,8c2d,"
            + "8d2s,8d2h,8d2c,7s2h,7s2c,7s2d,7h2s,7h2c,7h2d,7c2s,7c2h,7c2d,7d2s,"
            + "7d2h,7d2c,6s2h,6s2c,6s2d,6h2s,6h2c,6h2d,6c2s,6c2h,6c2d,6d2s,6d2h,"
            + "6d2c,5s2h,5s2c,5s2d,5h2s,5h2c,5h2d,5c2s,5c2h,5c2d,5d2s,5d2h,5d2c,"
            + "4s2h,4s2c,4s2d,4h2s,4h2c,4h2d,4c2s,4c2h,4c2d,4d2s,4d2h,4d2c,3s2h,"
            + "3s2c,3s2d,3h2s,3h2c,3h2d,3c2s,3c2h,3c2d,3d2s,3d2h,3d2c,2s2h,2s2d,"
            + "2s2c,2h2d,2h2c,2d2c";
}
